#+TITLE: DAT121 - Organisation
#+EMAIL: bernardy@chalmers.se
#+HTML_HEAD_EXTRA: <link rel="stylesheet" type="text/css" href="pp.css" />

This document is generated from an org-mode file.
   - To access it replace .html by .org in the URL for this file
   - It can be read in plain text: header level is indicated by number
     of *
   - Or more conveniently by using Emacs [[http://orgmode.org/][org mode]].
     + Use <TAB> to expand/collapse nodes.
     + C-c C-e b to do HTML rendering and open in your browser
     + Check out the [[http://orgmode.org/orgcard.txt][reference card]].

- Programming paradigms
- Chalmers Course code: DAT121
- G.U. Course Code: DIT331
* The teaching team
+ Jean-Philippe Bernardy
  - Course responsible & lecturer
  - Room: EDIT 5469
  - E-mail: bernardy (chalmers.se)
+ Nikita Frolov
  - Exercise tutor
  - Room: EDIT 5461
  - E-mail: frolov (chalmers.se)
+ Dan Rosén
  - Exercise tutor
  - Room: EDIT 5453
  - E-mail: danr (chalmers.se)
+ Inari Listenmaa
  - Exercise tutor
  - Room: EDIT 6461
  - E-mail: inari (chalmers.se)
* Schedule
** On TimeEdit:
https://se.timeedit.net/web/chalmers/db1/public/ri157XQQ708Z50Qv87003gZ6y6Y7008Q5Y61Y5.html
** <<Weekly Schedule>>:

+ Lecture 1 - Mon 10.00
+ Lecture 2 - Wed 10.00
+ Exercises
   - group A - Wed 13.15
   - group B - Wed 15.15
+ Exercise corrections
   - open to all: Thu 8.00
+ Office hours:
  - JP: Thu: 13.15
  - Nik: Mon. 13.15
  - Dan: Tue: 13.15 (moved on 28/1 and 4/2 to Friday 13.15)
  - Ina:
** <<Timetable>>

| Week | Starts | Lecture 1 | Lecture 2      | Exercises       | TAs       |
|------+--------+-----------+----------------+-----------------+-----------|
|    1 |   0120 | Intr      | IP 1           | EX 1            | Ina + Nik |
|    2 |   0127 | IP 2      | OO             | EX 2            | Nik + Ina |
|    3 |   0203 | FP 1      | No lecture (∗) | No exercise (∗) |           |
|    4 |   0210 | FP 2      | FP 3           | EX 3            | Ina + Dan |
|    5 |   0217 | CP 1      | CP 2           | EX 4            | Nik + Dan |
|    6 |   0224 | LP 1      | LP 2           | EX 5            | Dan + Ina |
|    7 |   0303 | Review    | Guest Lecture? | EX 6            | Dan + Nik |

  (∗): Charm Days

See table below for detail of contents.

| Abbr   | Contents                                                                                   |
|--------+--------------------------------------------------------------------------------------------|
| Intr   | Generalities                                                                               |
| IP 1   | Goto ↔ Loops, , Inlining procedures, Procedures → Gotos, Pointers and passing by reference |
| IP 2   | Recursion. Substitution model in the presence of recursion, Explicit stack                 |
| OO     | Inheritance, Interfaces, Notion of co/contra variance                                      |
| FP 1   | Algebraic Types, Pattern matching, Parametric types, Currification & HO Abstraction        |
| FP 2   | Polymorphic functions Translating away HOF (Inlining, Closures)                            |
| FP 3   | Explicit state, purity and laziness                                                        |
| CP 1   | Resource-managing processes                                                                |
| CP 2   | Explicit continuations                                                                     |
| LP 1   | Intro to LP; Unification                                                                   |
| LP 2   | Functions to Relations, Search as list of successes                                        |
| Review | Solutions to (part of) sample exams                                                        |
| EX 1   | Exercises: marked with @1 in file:All.pdf                                                  |
| EX 2   | Exercises:  marked with @2 in file:All.pdf                                                 |
| EX 3   | Exercises marked with @3 in file:All.pdf                                                   |
| EX 4   | Exercises marked with @4 in file:All.pdf                                                   |
| EX 5   | Exercises marked with @5 in file:All.pdf                                                   |
| EX 6   | ?                                                                                          |

Note: the contents of each exercise session is about the topics
covered in the two previous lectures. Remember to re-fetch the
file:All.pdf file each week: exercises may have been updated.

* Organisation
** Formal requirements
- Pass the exam (written exam)
- That's it!
** Informal requirements and learning aids
- Do the exercises
- Participate in the exercises sessions: see [[<<Exercises>>][below]] for details.
- Attend the lectures
- Prepare lectures by reading lecture notes and follow relevant links.
** Lectures
- The lecture notes can be accessed here [[http://www.cse.chalmers.se/~bernardy/pp/Lectures.html][here]]
- You can also use the source if you fancy emacs org-mode.
- I prefer to have interaction during the lectures, so feel free to
  interrupt me.
** <<Exercises>>
- 2 groups (go to only 1 session).
- Find out which is your group by using [[file:GroupAssignment.hs][this Haskell program]], unless
  this clashes with another course. See [[Weekly Schedule]] for times.
- You will be working on exercises during the session, with the help of the TAs.
  + To be able to follow what is going on, bring a printout of the
    questions.
  + It helps if you have prepared the exercises beforehand. (Remember
    to bring a written copy of your solution with you if you have
    prepared one.)
  + See the above table for which exercises you need to prepare for
    each session.
- On thursday, a TA will go through (the most important) exercises
  seen during the week.
* Reading material
+ Unfortunately, I do not know of a single textbook covering all the
  material in a suitable way. Therefore, [[file:Lectures.org][the lecture notes]] are the "master"
  source for the course.
+ The exercises [[file:All.pdf][(pdf)]] are also part of the course material.
+ Extra reading for the braves:
   + Single most relevant textbook: probably

     + "Programming Languages -- Application and Interpretation", Shriram Krishnamurthi.

     http://www.plai.org/
   #  http://www.cs.brown.edu/~sk/Publications/Books/ProgLangs/2007-04-26/

     + but
       * uses different structure
       * uses scheme (LISP) syntax
       * is written with MS and PhD students in mind

     + Relevant parts
       * Part I (To understand the point of view of the author)
       * Shreds of part II
       * Parts III, IV, VI, VII
       * Part X (Ch. 24, 25)
       * Part XI

   + Other relevant books
     - "Essentials of Programming Languages", Friedman, Wand and Haynes (http://www.eopl3.com/)
     - "Concepts, Techniques, and Models of Computer Programming", Van Roy (http://www.info.ucl.ac.be/~pvr/book.html)
     - ...

* Outline of the course
** Brief exposition of each paradigm
** (Some) Transformations between paradigms
- Explanation of programming languages features by translation.
*This is the focus of the course.*
** Learning outcomes
*** Awareness of multiple paradigms
First questions of the design phase: "How should I think about this
problem? (Do I know a paradigm suitable to express the solution?)"
*** Recognise "encoded" thoughts:
+ what is the natural paradigm
+ decode them

From this point of view, this course teaches "design patterns"

*** Encode thoughts expressed in a paradigm in another one
*** The exam questions will be similar to exercises
Note in particular that exercises are integral part of the course material.

* Course evaluation

For an overview of the process, see [[http://www.chalmers.se/insidan/SV/utbildning-och-forskning/grundutbildning/undervisningsstod-for/kursutvarderingar][here]].

** Designated representatives:
| Name                     | email (at student.chalmers.se) |
|--------------------------+--------------------------------|
| SARAR INNAB              | innab                          |
| ERIK JOHANNESEN          | joherx                         |
| NIKLAS JOHANSSON MIGLAVS | miglav                         |
| DANIEL LARSSON           | dalars                         |
** Evaluation Meeting 1
Only Erik was present at the meeting.
** Evaluation Meeting 2

Items:
*** Changes in the course since last year (History).
**** new in 2012
- Moved from Master (served as a common ground in programming for
  students with various backgrounds -- the course was given to many
  international students)
- To Bachelor (most students had basic course in FP, OO, ...); the
  focus of the course is now to explain the links between the
  paradigms, and explain new concepts by translation into known (old)
  concepts.
**** new in 2013
- Different style of exercise sessions (less interactive)
- More course material produced
**** new in 2014 (Plans)
- Students will be informed earlier which exercises are relevant.
- The solution for all questions/exercises to be found in the lecture notes
- Publish the complete code for exercise answers
**** TODO new in 2015 (plans)
Introduce the substitution model in the first lecture; when explaining
abstraction and naming.
*** Study climate (communication, level of workload, tutorials)
*** Problematic course items; can resources be used better?
*** Course-specific questions in questionnaire; other material for final meeting?
